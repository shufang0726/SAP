// <auto-generated>
//     This code was generated
//     by wd2cs.exe version 5.2.0.2
//     using UIAF version 5.2.0.0
//
//     Command line : "C:\Users\asttest\Desktop\UIAF\wd2cs.exe" "C:\Users\asttest\Desktop\PhysicalModel\OpenFileDialog.wd" /top_directory "C:\Users\asttest\Desktop\PhysicalModel" /dynamic false /class_prefix SC /extension .cs
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

using System;
using System.Drawing;
using System.Text.RegularExpressions;
using UIAF;

namespace UIAF.Hierarchy
{

    /// <summary>
    /// Roles.Window
    /// </summary>
    [Role(Roles.Window)]
    public partial class OpenFileDialog
    {
        private static ACLimitedWithChildren s_This_AO;
        private static ACLimitedWithChildren This_AO
        {
            get
            {
                if ((s_This_AO == null))
                {
                    s_This_AO = new ACLimitedWithChildren();
                    s_This_AO.AccObject = new AccObject(null, Roles.Window, ";ClassName = \'#32770\'", new string[0], "OpenFileDialog");
                }
                return s_This_AO;
            }
        }
        public static AccObject AccObject
        {
            get
            {
                return This_AO.AccObject;
            }
            set
            {
                This_AO.AccObject = value;
            }
        }
        public static Rectangle BoundingRectangle
        {
            get
            {
                return This_AO.BoundingRectangle;
            }
        }
        public static Int32 ChildCount
        {
            get
            {
                return This_AO.ChildCount;
            }
        }
        public static AccObject[] Children
        {
            get
            {
                return This_AO.Children;
            }
        }
        public static String CustomRole
        {
            get
            {
                return This_AO.CustomRole;
            }
        }
        public static Boolean Enabled
        {
            get
            {
                return This_AO.Enabled;
            }
        }
        public static Boolean EnableVerifiers
        {
            get
            {
                return This_AO.EnableVerifiers;
            }
            set
            {
                This_AO.EnableVerifiers = value;
            }
        }
        public static Boolean Exists
        {
            get
            {
                return This_AO.Exists;
            }
        }
        public static Boolean Gone
        {
            get
            {
                return This_AO.Gone;
            }
        }
        public static String LastQIDValue
        {
            get
            {
                return This_AO.LastQIDValue;
            }
        }
        [ObsoleteAttribute("Location property is deprecated, please use BoundingRectangle instead")]
        public static Rectangle Location
        {
            get
            {
                return This_AO.BoundingRectangle;
            }
        }
        public static String Name
        {
            get
            {
                return This_AO.Name;
            }
        }
        public static Object Object
        {
            get
            {
                return This_AO.Object;
            }
        }
        public static String Role
        {
            get
            {
                return This_AO.Role;
            }
        }
        public static String State
        {
            get
            {
                return This_AO.State;
            }
        }
        public static Boolean Visible
        {
            get
            {
                return This_AO.Visible;
            }
        }
        public static String WDPath
        {
            get
            {
                return This_AO.WDPath;
            }
        }
        public static void BringUp()
        {
            This_AO.BringUp();
        }
        public static AccObject FindChild(params String[] NameOrQIDOrResKey)
        {
            return This_AO.FindChild(NameOrQIDOrResKey);
        }
        public static AccObject FindChild(Regex RegexName)
        {
            return This_AO.FindChild(RegexName);
        }
        public static AccObject FindChild(Char Separator, String ConcatenetedNamesOrQIDsOrResKeys)
        {
            return This_AO.FindChild(Separator, ConcatenetedNamesOrQIDsOrResKeys);
        }
        public static AccObject FindChild(Regex RegexName, String Role)
        {
            return This_AO.FindChild(RegexName, Role);
        }
        public static AccObject FindChild(String QID, String[] ResKeys)
        {
            return This_AO.FindChild(QID, ResKeys);
        }
        public static AccObject FindChildByValue(Regex RegexValue)
        {
            return This_AO.FindChildByValue(RegexValue);
        }
        public static AccObject FindChildByValue(String Value)
        {
            return This_AO.FindChildByValue(Value);
        }
        public static AccObject FindChildByValue(Regex RegexValue, String Role)
        {
            return This_AO.FindChildByValue(RegexValue, Role);
        }
        public static AccObject FindChildByValue(String Value, Boolean Exact)
        {
            return This_AO.FindChildByValue(Value, Exact);
        }
        public static AccObject FindChildByValue(String Value, String Role)
        {
            return This_AO.FindChildByValue(Value, Role);
        }
        public static AccObject FindChildByValue(String Value, Boolean Exact, String Role)
        {
            return This_AO.FindChildByValue(Value, Exact, Role);
        }
        public static AccObject[] FindChildren(String QID)
        {
            return This_AO.FindChildren(QID);
        }
        public static AccObject[] FindChildren(String QID, String[] ResKeys)
        {
            return This_AO.FindChildren(QID, ResKeys);
        }
        public static void Type(String Keys, Boolean Literal = false, Boolean Unicode = false)
        {
            This_AO.Type(Keys, Literal, Unicode);
        }
        public static void WaitForGone()
        {
            This_AO.WaitForGone();
        }
        public static void WaitForGone(Int32 Timeout)
        {
            This_AO.WaitForGone(Timeout);
        }
        public static void WaitForGone(Int32 Timeout, Int32 PollInterval)
        {
            This_AO.WaitForGone(Timeout, PollInterval);
        }
        public static AccObject WaitForInit()
        {
            return This_AO.WaitForInit();
        }
        public static AccObject WaitForInit(Int32 Timeout)
        {
            return This_AO.WaitForInit(Timeout);
        }
        public static void WaitForNotShown()
        {
            This_AO.WaitForNotShown();
        }
        public static void WaitForNotShown(Boolean WaitForReady)
        {
            This_AO.WaitForNotShown(WaitForReady);
        }
        public static void WaitForNotShown(Int32 Timeout)
        {
            This_AO.WaitForNotShown(Timeout);
        }
        public static void WaitForNotShown(Int32 Timeout, Boolean WaitForReady)
        {
            This_AO.WaitForNotShown(Timeout, WaitForReady);
        }
        public static void WaitForNotShown(Int32 WaitForReadyTimeout, Int32 WaitForGoneTimeout)
        {
            This_AO.WaitForNotShown(WaitForReadyTimeout, WaitForGoneTimeout);
        }
        public static void WaitForNotShown(Int32 Timeout, Boolean WaitForReady, Int32 PollInterval)
        {
            This_AO.WaitForNotShown(Timeout, WaitForReady, PollInterval);
        }
        public static void WaitForNotShown(Int32 WaitForReadyTimeout, Int32 WaitForGoneTimeout, Int32 PollInterval)
        {
            This_AO.WaitForNotShown(WaitForReadyTimeout, WaitForGoneTimeout, PollInterval);
        }
        public static AccObject WaitForReady()
        {
            return This_AO.WaitForReady();
        }
        public static AccObject WaitForReady(Int32 Timeout)
        {
            return This_AO.WaitForReady(Timeout);
        }
        public static AccObject WaitForState(String StateValue, Boolean Contained)
        {
            return This_AO.WaitForState(StateValue, Contained);
        }
        public static AccObject WaitForState(String StateValue, Boolean Contained, Int32 Timeout)
        {
            return This_AO.WaitForState(StateValue, Contained, Timeout);
        }
        public static AccObject WaitForState(String StateValue, Boolean Contained, Int32 Timeout, Int32 PollInterval)
        {
            return This_AO.WaitForState(StateValue, Contained, Timeout, PollInterval);
        }
        public static AccObject WaitForVisible()
        {
            return This_AO.WaitForVisible();
        }
        public static AccObject WaitForVisible(Int32 Timeout)
        {
            return This_AO.WaitForVisible(Timeout);
        }
        public static AccObject WaitForVisible(Int32 Timeout, Int32 PollInterval)
        {
            return This_AO.WaitForVisible(Timeout, PollInterval);
        }
        private static ACWithMouse Cancel_AO;
        /// <summary>
        /// Roles.PushButton
        /// </summary>
        [Role(Roles.PushButton)]
        public static ACWithMouse Cancel
        {
            get
            {
                if ((Cancel_AO == null))
                {
                    Cancel_AO = new ACWithMouse();
                    Cancel_AO.AccObject = new AccObject(This_AO, Roles.PushButton, ";[MSAA]Role = \'window\' && ClassName = \'Button\';Role = \'push button\'", new string[0], ".Cancel");
                }
                return Cancel_AO;
            }
        }
        private static ACWithMouse Open_AO;
        /// <summary>
        /// Roles.PushButton
        /// </summary>
        [Role(Roles.PushButton)]
        public static ACWithMouse Open
        {
            get
            {
                if ((Open_AO == null))
                {
                    Open_AO = new ACWithMouse();
                    Open_AO.AccObject = new AccObject(This_AO, Roles.PushButton, ";[MSAA]Role = \'window\' && ClassName = \'Button\';Role = \'push button\'", new string[0], ".Open");
                }
                return Open_AO;
            }
        }
        private static ACEdit FileName_AO;
        /// <summary>
        /// Roles.EditableText
        /// </summary>
        [Role(Roles.EditableText)]
        public static ACEdit FileName
        {
            get
            {
                if ((FileName_AO == null))
                {
                    FileName_AO = new ACEdit();
                    FileName_AO.AccObject = new AccObject(This_AO, Roles.EditableText, ";[MSAA]Role = \'window\' && ClassName = \'Edit\';Role = \'editable text\'", new string[0], ".FileName");
                }
                return FileName_AO;
            }
        }
        private static ACWithMouse AllLocations_AO;
        /// <summary>
        /// Roles.SplitButton
        /// </summary>
        [Role(Roles.SplitButton)]
        public static ACWithMouse AllLocations
        {
            get
            {
                if ((AllLocations_AO == null))
                {
                    AllLocations_AO = new ACWithMouse();
                    AllLocations_AO.AccObject = new AccObject(This_AO, Roles.SplitButton, ";[MSAA]Role = \'split button\'", new string[0], ".AllLocations");
                }
                return AllLocations_AO;
            }
        }
        private static ACEdit Address_AO;
        /// <summary>
        /// Roles.EditableText
        /// </summary>
        [Role(Roles.EditableText)]
        public static ACEdit Address
        {
            get
            {
                if ((Address_AO == null))
                {
                    Address_AO = new ACEdit();
                    Address_AO.AccObject = new AccObject(This_AO, Roles.EditableText, ";[MSAA]Role = \'dialog\';Role = \'progress bar\' && ClassName = \'msctls_progress32\';R" +
                            "ole = \'window\' && ClassName = \'ComboBox\';Role = \'combo box\';Role = \'window\' && C" +
                            "lassName = \'Edit\';Role = \'editable text\'", new string[0], ".Address");
                }
                return Address_AO;
            }
        }
    }
}
